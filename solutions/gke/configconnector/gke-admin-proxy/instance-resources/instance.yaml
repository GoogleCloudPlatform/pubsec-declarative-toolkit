# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# Create a compute instance to manage private GKE clusters
# https://cloud.google.com/kubernetes-engine/docs/tutorials/private-cluster-bastion
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeInstance
metadata:
  name: project-id--instance-name # kpt-set: ${project-id}--${instance-name}
  namespace: client-name-admin # kpt-set: ${client-name}-admin
  annotations:
    cnrm.cloud.google.com/project-id: project-id # kpt-set: ${project-id}
    cnrm.cloud.google.com/allow-stopping-for-update: "true"
    cnrm.cloud.google.com/state-into-spec: "absent"
    config.kubernetes.io/depends-on: iam.cnrm.cloud.google.com/namespaces/client-name-admin/IAMServiceAccount/project-id--instance-name-sa # kpt-set: iam.cnrm.cloud.google.com/namespaces/${client-name}-admin/IAMServiceAccount/${project-id}--${instance-name}-sa
spec:
  resourceID: instance-name # kpt-set: ${instance-name}
  description: Instance to manage private GKE
  machineType: instance-machine-type # kpt-set: ${instance-machine-type}
  zone: location-a # kpt-set: ${location}-a
  bootDisk:
    autoDelete: true
    deviceName: persistent-disk-0
    initializeParams:
      size: 20
      type: pd-balanced
      sourceImageRef:
        external: instance-os-image # kpt-set: ${instance-os-image}
  networkInterface:
    - name: nic0
      networkIpRef:
        kind: ComputeAddress
        name: project-id--instance-name-ip # kpt-set: ${project-id}--${instance-name}-ip
        namespace: client-name-networking # kpt-set: ${client-name}-networking
      networkRef:
        name: network-name # kpt-set: ${network-name}
        namespace: client-name-networking # kpt-set: ${client-name}-networking
      stackType: IPV4_ONLY
      subnetworkRef:
        name: subnet-name # kpt-set: ${subnet-name}
        namespace: client-name-networking # kpt-set: ${client-name}-networking
      subnetworkProject: host-project-id # kpt-set: ${host-project-id}
  serviceAccount:
    serviceAccountRef:
      name: project-id--instance-name-sa # kpt-set: ${project-id}--${instance-name}-sa
      namespace: client-name-admin # kpt-set: ${client-name}-admin
    scopes:
      - https://www.googleapis.com/auth/cloud-platform
  metadata:
    - key: enable-oslogin
      value: "TRUE"
    - key: startup-script
      value: |
        #! /bin/bash
        apt update
        apt -y install tinyproxy
        # add 'Allow localhost' entry after 'Allow 127.0.0.1' if it doesn't exist
        grep --quiet '^Allow localhost$' /etc/tinyproxy/tinyproxy.conf \
          || sed -i 's/Allow 127.0.0.1/Allow 127.0.0.1\nAllow localhost/g' /etc/tinyproxy/tinyproxy.conf
        service tinyproxy restart
  scheduling:
    automaticRestart: true
    onHostMaintenance: MIGRATE
    provisioningModel: STANDARD
  shieldedInstanceConfig:
    enableIntegrityMonitoring: true
    enableSecureBoot: true
    enableVtpm: true
