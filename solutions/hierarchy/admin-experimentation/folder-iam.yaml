---
# Grant GCP role Folder Admin on Admin's folder to admin
# AC-3(7) - ACCESS ENFORCEMENT | ROLE-BASED ACCESS CONTROL
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: admins.admin1-admin-folder-admin-permissions # kpt-set: admins.${admin-name}-admin-folder-admin-permissions
  namespace: hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    name: tests.admins.admin1 # kpt-set: tests.admins.${admin-name}
  role: roles/resourcemanager.folderAdmin
  member: admin-owner # kpt-set: ${admin-owner}
---
# Grant GCP role Project Creator on Admin's folder to admin
# AC-3(7) - ACCESS ENFORCEMENT | ROLE-BASED ACCESS CONTROL
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: admins.admin1-admin-project-creator-permissions # kpt-set: admins.${admin-name}-admin-project-creator-permissions
  namespace: hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    name: tests.admins.admin1 # kpt-set: tests.admins.${admin-name}
  role: roles/resourcemanager.projectCreator
  member: admin-owner # kpt-set: ${admin-owner}
---
# Grant GCP role Owner on Admin's folder to admin
# AC-3(7) - ACCESS ENFORCEMENT | ROLE-BASED ACCESS CONTROL
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: admins.admin1-admin-owner-permissions # kpt-set: admins.${admin-name}-admin-owner-permissions
  namespace: hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    name: tests.admins.admin1 # kpt-set: tests.admins.${admin-name}
  role: roles/owner
  member: admin-owner # kpt-set: ${admin-owner}
