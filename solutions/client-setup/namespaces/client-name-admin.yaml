# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# GCP SA, has no permissions defined by default, they will be granted on a case by case basis to limit scope
# AC-1 - Implementation of access control
# AC-3, AC-3(7), AC-16(2) - This service account possesses minimal privileges(permissions) and is restricted to performing only the necessary operations for resources within the designated namespace. The service account is associated with the current namespace and is assigned minimal permissions to create resources in this namespace only.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: client-name-admin-sa # kpt-set: ${client-name}-admin-sa
  namespace: client-name-config-control # kpt-set: ${client-name}-${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: client-management-project-id # kpt-set: ${client-management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
spec:
  # AC-3, AC-3(7), AC-16(2)
  displayName: client-name-admin-sa # kpt-set: ${client-name}-admin-sa
---
# K8S SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata:
  name: client-name-admin-sa-workload-identity-binding # kpt-set: ${client-name}-admin-sa-workload-identity-binding
  namespace: client-name-config-control # kpt-set: ${client-name}-${management-namespace}
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
spec:
  resourceRef:
    name: client-name-admin-sa # kpt-set: ${client-name}-admin-sa
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
  # AC-1, AC-3, AC-3(7), AC-16(2)
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - member: serviceAccount:management-project-id.svc.id.goog[cnrm-system/cnrm-controller-manager-client-name-admin] # kpt-set: serviceAccount:${management-project-id}.svc.id.goog[cnrm-system/cnrm-controller-manager-${client-name}-admin]
---
# K8S namespace
apiVersion: v1
kind: Namespace
metadata:
  name: client-name-admin # kpt-set: ${client-name}-admin
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
---
# Link GCP SA to K8S namespace
apiVersion: core.cnrm.cloud.google.com/v1beta1
kind: ConfigConnectorContext
metadata:
  name: configconnectorcontext.core.cnrm.cloud.google.com
  namespace: client-name-admin # kpt-set: ${client-name}-admin
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
spec:
  # AC-3, AC-3(7), AC-16(2)
  googleServiceAccount: client-name-admin-sa@client-management-project-id.iam.gserviceaccount.com # kpt-set: ${client-name}-admin-sa@${client-management-project-id}.iam.gserviceaccount.com
---
# Grant viewer role on the client projects namespace to client admin K8S SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: allow-resource-reference-from-client-name-admin # kpt-set: allow-resource-reference-from-${client-name}-admin
  namespace: client-name-projects # kpt-set: ${client-name}-projects
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
roleRef:
  # AC-1, AC-3, AC-3(7), AC-16(2)
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-client-name-admin # kpt-set: cnrm-controller-manager-${client-name}-admin
    namespace: cnrm-system
    kind: ServiceAccount
---
# Grant viewer role on the client admin namespace to client projects K8S SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: allow-resource-reference-from-client-name-projects # kpt-set: allow-resource-reference-from-${client-name}-projects
  namespace: client-name-admin # kpt-set: ${client-name}-admin
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
roleRef:
  # AC-1, AC-3, AC-3(7), AC-16(2)
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-client-name-projects # kpt-set: cnrm-controller-manager-${client-name}-projects
    namespace: cnrm-system
    kind: ServiceAccount
---
# Grant viewer role on the client networking namespace to client admin K8S SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: allow-resource-reference-from-client-name-admin # kpt-set: allow-resource-reference-from-${client-name}-admin
  namespace: client-name-networking # kpt-set: ${client-name}-networking
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
roleRef:
  # AC-1, AC-3, AC-3(7), AC-16(2)
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-client-name-admin # kpt-set: cnrm-controller-manager-${client-name}-admin
    namespace: cnrm-system
    kind: ServiceAccount
---
# Grant viewer role on the client admin namespace to client networking K8S SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: allow-resource-reference-from-client-name-networking # kpt-set: allow-resource-reference-from-${client-name}-networking
  namespace: client-name-admin # kpt-set: ${client-name}-admin
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/client-management-project-id # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
roleRef:
  # AC-1, AC-3, AC-3(7), AC-16(2)
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-client-name-networking # kpt-set: cnrm-controller-manager-${client-name}-networking
    namespace: cnrm-system
    kind: ServiceAccount
