# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# Isolate non-protected subnet so it denies ingress traffic from pbmm subnet
# AC-3(9), AC-4, AC-4(21), SC-7(5), SC-7(8), SC-7(9), SC-7(11) - All connections to or from virtual machine instances are allowed/denied via firewall rules configured in shared VPC network within host project or firewall policies in parent folders based on least-privilege principle. Each firewall rule applies to incoming(ingress) or outgoing(egress) connections, not both.
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeFirewallPolicyRule
metadata:
  name: client-name-standard-fwpol-isolate-nonp-fwr # kpt-set: ${client-name}-standard-fwpol-isolate-nonp-fwr
  namespace: client-name-networking # kpt-set: ${client-name}-networking
  annotations:
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/client-name-networking/ComputeFirewallPolicy/client-name-standard-fwpol # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeFirewallPolicy/${client-name}-standard-fwpol
spec:
  action: "deny"
  description: "Isolate non-protected subnet so it denies ingress traffic from pbmm subnet"
  direction: "INGRESS"
  disabled: false
  enableLogging: true
  # AC-3(9), AC-4, AC-4(21), SC-7(5), SC-7(8), SC-7(9), SC-7(11)
  firewallPolicyRef:
    name: client-name-standard-fwpol # kpt-set: ${client-name}-standard-fwpol
  match:
    layer4Configs:
      - ipProtocol: "all"
    srcIPRanges: # kpt-set: ${standard-pbmm-cidr}
      - "standard-pbmm-cidr"
    destIPRanges: # kpt-set: ${standard-nonp-cidr}
      - "standard-nonp-cidr"
  priority: 1000
---
# Isolate PBMM subnet so it denies ingress traffic from non-protected subnet
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeFirewallPolicyRule
metadata:
  name: client-name-standard-fwpol-isolate-pbmm-fwr # kpt-set: ${client-name}-standard-fwpol-isolate-pbmm-fwr
  namespace: client-name-networking # kpt-set: ${client-name}-networking
  annotations:
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/client-name-networking/ComputeFirewallPolicy/client-name-standard-fwpol # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeFirewallPolicy/${client-name}-standard-fwpol
spec:
  action: "deny"
  description: "Isolate PBMM subnet so it denies ingress traffic from non-protected subnet"
  direction: "INGRESS"
  disabled: false
  enableLogging: true
  # AC-3(9), AC-4, AC-4(21), SC-7(5), SC-7(8), SC-7(9), SC-7(11)
  firewallPolicyRef:
    name: client-name-standard-fwpol # kpt-set: ${client-name}-standard-fwpol
  match:
    layer4Configs:
      - ipProtocol: "all"
    srcIPRanges: # kpt-set: ${standard-nonp-cidr}
      - "standard-nonp-cidr"
    destIPRanges: # kpt-set: ${standard-pbmm-cidr}
      - "standard-pbmm-cidr"
  priority: 1100
