# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: pbmmservices
  annotations:
    description: Establish policies to restrict workloads to PBMM approved services.
spec:
  crd:
    spec:
      names:
        kind: PbmmServices
      validation:
        openAPIV3Schema:
          type: object
          properties:
            allowedServices:
              description: "List of allowed GCP PBMM Services"
              type: array
              items:
                type: string
            allowedapis:
              description: "Approved PBMM Google Cloud APIs"
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |-
        package pbmmservices
        violation[{"msg": message}] {
          asset := input.review.object
          is_service(asset)
          has_key(asset.spec, "resourceID")
          api := asset.spec.resourceID
          allowed := input.parameters.allowedapis
          not allowedResource(api, allowed)
          message := sprintf("Assured Workloads: %v API is not Protected B Approved", [ api ] )
        }
        violation[{"msg": message}] {
          asset := input.review.object
          not allowedResource(asset.apiVersion, input.parameters.allowedServices)
          message := sprintf("Assured Workloads: Resource %v ('%v') is not approved for Protected B '%v'", [asset.metadata.name, asset.apiVersion, asset.spec.location ])
        }
        allowedResource(resource, allowed) {
          resource == allowed[_]
        }
        is_service(obj){
          obj.apiVersion == "serviceusage.cnrm.cloud.google.com/v1beta1"
          obj.kind == "Service"
        }
        has_key(x, k) {
            _ = x[k]
        }