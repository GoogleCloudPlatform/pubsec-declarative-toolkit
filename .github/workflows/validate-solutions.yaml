name: validate-solutions
on:
  # disable normal push trigger to avoid running duplicates during PRs
  # push:
  #   paths:
  #     - solutions/**
  pull_request:
    branches: [main]
    paths:
      - 'solutions/**'

jobs:
  render-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1
      
      - name: 'Validate All Solutions Packages'
        run: |
          # set kpt and nomos to run with docker in /workspace working directory
          # note: starting with nomos ~v1.14.1, the image as an entrypoint to the 'nomos' command (only need to pass the parameters)
          KPT="docker run -v $PWD:/workspace -w /workspace -v /var/run/docker.sock:/var/run/docker.sock gcr.io/kpt-dev/kpt:v1.0.0-beta.27"
          NOMOS="docker run -v $PWD:/workspace -w /workspace gcr.io/config-management-release/nomos:v1.14.2"

          # loop through each solutions package defined in the release please manifest
          # for pkg in $(jq -r '.packages | keys[]' release-please-config.json | sort)

          # find all Kptfile in solutions/, extract its directory name and sort to render top-level packages first
          for pkg in $(find solutions -name Kptfile -exec dirname {} \; | sort)
          do
            echo -e "\n##############################\n## Validating '${pkg}' \n##############################"

            echo -e "\n## Running 'kpt fn render ${pkg}' ...\n"
            ${KPT} fn render ${pkg} --truncate-output=false
            
            # TODO: kubeval no longer maintained, future improvement to possibly use kubeconform or apply to a kind cluster
            echo -e "\n## Running 'kpt fn eval -i kubeval:v0.3.0 ${pkg}' ...\n"
            ${KPT} fn eval -i kubeval:v0.3.0 ${pkg} --truncate-output=false -- ignore_missing_schemas=true strict=true

            echo -e "\n## Running 'nomos vet ${pkg}' ...\n"
            ${NOMOS} vet --no-api-server-check --source-format unstructured --path ${pkg}
          done

          echo -e "\n##############################\n## Validation Complete \n##############################"
          
      
      # - name: 'Render All Solutions - kpt fn render'
      #   run: |
      #     # remove known problematic files and folders
      #     # the arete solutions.yaml fails rendering because it doesn't have an 'apiVersion' defined
      #     rm solutions/solutions.yaml
      #     # the kcc-namespace package has default setters with uppercases and underscores which creates invalid resource names, etc.
      #     rm --recursive --force solutions/kcc-namespaces

      #     # initialize the entire solutions folder as a kpt package
      #     docker run -v $PWD:/app -v /var/run/docker.sock:/var/run/docker.sock gcr.io/kpt-dev/kpt:v1.0.0-beta.27 pkg init /app/solutions
          
      #     # render the entire solutions folder
      #     docker run -v $PWD:/app -v /var/run/docker.sock:/var/run/docker.sock gcr.io/kpt-dev/kpt:v1.0.0-beta.27 fn render /app/solutions --truncate-output=false
      
      # - name: 'Upload Rendered Solutions Artifact'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: all-solutions-render
      #     path: ./solutions
      #     retention-days: 1

      # - name: 'Download Rendered Solutions Artifact'
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: all-solutions-render
      
      # - name: dir check
      #   run: pwd && ls
      
      # - name: nomos vet all solutions
      #   run: |
      #     docker run -v $PWD/solutions:/solutions gcr.io/config-management-release/nomos:v1.14.2 vet --no-api-server-check --source-format unstructured --path /solutions