name: validate-solutions
on:
  # disable normal push trigger to avoid running duplicates during PRs
  # push:
  #   paths:
  #     - solutions/**
  pull_request:
    branches: [main]
    paths:
      - 'solutions/**'

jobs:
  render-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: 'Validate Solutions Packages'
        run: |
          # set kpt and nomos to run with docker in /workspace working directory
          # note: starting with nomos ~v1.14.1, the image as an entrypoint to the 'nomos' command (only need to pass the parameters)
          KPT="docker run -v $PWD:/workspace -w /workspace --user $(id -u):$(id -g) -v /var/run/docker.sock:/var/run/docker.sock gcr.io/kpt-dev/kpt:v1.0.0-beta.27"
          NOMOS="docker run -v $PWD:/workspace -w /workspace gcr.io/config-management-release/nomos:v1.14.2"
          TEMP_DIR='temp-workspace'

          # find all Kptfile in solutions/, extract its directory name and sort
          for pkg in $(find solutions -name Kptfile -exec dirname {} \; | sort)
          do
            echo -e "\n##############################\n## Validating '${pkg}' \n##############################"

            # check if the package was modified (git diff exit code not 0), or if the flag to validate all is set
            if ! git diff origin/main --quiet --exit-code -- ${pkg} || [[ "${VALIDATE_ALL_SOLUTIONS}" == "true" ]] ; then
              # create temporary directory to copy the package
              mkdir -p "${TEMP_DIR}/${pkg}"
              cp -rf "${pkg}/." "${TEMP_DIR}/${pkg}"

              echo -e "\n## Running 'kpt fn render ${pkg}' ...\n"
              ${KPT} fn render "${TEMP_DIR}/${pkg}" --truncate-output=false

              # TODO: kubeval is no longer maintained, future improvement to possibly use kubeconform or apply to a kind cluster
              # !!! the kpt kubeval function can change quotes in annotations and remove duplicate resources (maybe 'kpt fn eval' does this?)
              # to workaround this, set an '--output' directory to avoid in-place modifications, the directory must not exist
              echo -e "\n## Running 'kpt fn eval -i kubeval:v0.3.0 ${pkg}' ...\n"
              rm -rf "${TEMP_DIR}/kubeval/${pkg}"
              ${KPT} fn eval -i kubeval:v0.3.0 "${TEMP_DIR}/${pkg}" --output="${TEMP_DIR}/kubeval/${pkg}" --truncate-output=false -- ignore_missing_schemas=true strict=true

              # # remove local configs (setters, Kptfile, etc) to avoid duplicate resources
              # echo -e "\n## Removing local config resources ..."
              # ${KPT} fn eval "${TEMP_DIR}/${pkg}" --image="gcr.io/kpt-fn/remove-local-config-resources:v0.1" --truncate-output=false

              echo -e "\n## Running 'nomos vet ${pkg}' ...\n"
              ${NOMOS} vet --no-api-server-check --source-format unstructured --path "${TEMP_DIR}/${pkg}"

              rm -rf "${TEMP_DIR}/${pkg}"
            else
              echo "No modification detected for the package, skipping."
            fi
          done

          # cleanup
          rm -rf "${TEMP_DIR}"

          echo -e "\n##############################\n## Validation Complete \n##############################"
        env:
          VALIDATE_ALL_SOLUTIONS: false

      # - name: 'Render All Solutions - kpt fn render'
      #   run: |
      #     # remove known problematic files and folders
      #     # the arete solutions.yaml fails rendering because it doesn't have an 'apiVersion' defined
      #     rm solutions/solutions.yaml
      #     # the kcc-namespace package has default setters with uppercases and underscores which creates invalid resource names, etc.
      #     rm --recursive --force solutions/kcc-namespaces

      #     # initialize the entire solutions folder as a kpt package
      #     docker run -v $PWD:/app -v /var/run/docker.sock:/var/run/docker.sock gcr.io/kpt-dev/kpt:v1.0.0-beta.27 pkg init /app/solutions

      #     # render the entire solutions folder
      #     docker run -v $PWD:/app -v /var/run/docker.sock:/var/run/docker.sock gcr.io/kpt-dev/kpt:v1.0.0-beta.27 fn render /app/solutions --truncate-output=false

      # - name: 'Upload Rendered Solutions Artifact'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: all-solutions-render
      #     path: ./solutions
      #     retention-days: 1

      # - name: 'Download Rendered Solutions Artifact'
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: all-solutions-render

      # - name: dir check
      #   run: pwd && ls

      # - name: nomos vet all solutions
      #   run: |
      #     docker run -v $PWD/solutions:/solutions gcr.io/config-management-release/nomos:v1.14.2 vet --no-api-server-check --source-format unstructured --path /solutions